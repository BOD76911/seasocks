language: generic

dist: bionic

env:
  - CXX=g++-10 CC=gcc-10
  - CXX=g++-9 CC=gcc-9
  - CXX=g++-8 CC=gcc-8
  - CXX=g++-7 CC=gcc-7
  - CXX=g++-6 CC=gcc-6 EXTRA_CMAKE=-DDEFLATE_SUPPORT=Off
  - CXX=g++-6 CC=gcc-6
  - CXX=g++-5 CC=gcc-5
  - CXX=clang++-7 CC=clang-7
  - CXX=clang++-8 CC=clang-8
  - CXX=clang++-9 CC=clang-9
  - CXX=clang++-10 CC=clang-10

addons:
  apt:
    packages:
      - g++-5
      - g++-6
      - g++-7
      - g++-8
      - g++-9
      - g++-10
      - clang-8
      - libc++-8-dev
      - libc++abi-8-dev
      - clang-7
      - libc++-7-dev
      - libc++abi-7-dev
      - clang-9
      - libc++-9-dev
      - libc++abi-9-dev
      - clang-10
      - libc++-10-dev
      - libc++abi-10-dev
      - valgrind
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-bionic-9
      - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

install:
  - if [[ "$CXX" == clang* ]]; then export CXXFLAGS="-stdlib=libc++"; fi
  - JOBS=2

jobs:
  include:
    - stage: unit and compile test
      before_script:
        - cmake --version
        - cmake . -Bbuild -DCMAKE_BUILD_TYPE=Release -DCOVERAGE=On ${EXTRA_CMAKE}
        - cmake --build build -- -j${JOBS}

      script:
        - cd build
        - cmake --build . --target test
        - ctest -D ExperimentalBuild -j${JOBS}
        - ctest -D ExperimentalMemCheck -j${JOBS}
        - bash <(curl -s https://codecov.io/bash)
